name: Build and Deploy to Server

on:
  push:
    branches: [main]

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push Django image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/rental-guru:latest
            ${{ secrets.DOCKER_USERNAME }}/rental-guru:${{ github.sha }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/rental-guru:latest
          cache-to: type=inline

      - name: Build and push Celery image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile.celery
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/rental-guru-celery:latest
            ${{ secrets.DOCKER_USERNAME }}/rental-guru-celery:${{ github.sha }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/rental-guru-celery:latest
          cache-to: type=inline

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            cd /root/app
            
            # Обновляем образы
            docker pull ${{ secrets.DOCKER_USERNAME }}/rental-guru:latest
            docker pull ${{ secrets.DOCKER_USERNAME }}/rental-guru-celery:latest
            
            # Останавливаем старые контейнеры
            docker compose down
            
            # Обновляем docker-compose.yaml с новыми образами
            sed -i 's|image: .*rental-guru:.*|image: ${{ secrets.DOCKER_USERNAME }}/rental-guru:latest|g' docker-compose.yaml
            sed -i 's|image: .*rental-guru-celery:.*|image: ${{ secrets.DOCKER_USERNAME }}/rental-guru-celery:latest|g' docker-compose.yaml
            
            # Запускаем обновленные контейнеры
            docker compose up -d
            
            # Выполняем миграции
            docker compose exec -T django python manage.py migrate
            
            # Собираем статику
            docker compose exec -T django python manage.py collectstatic --noinput
            
            # Очищаем старые образы
            docker image prune -f
            
            echo "✅ Deployment completed successfully!"

