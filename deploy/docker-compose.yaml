services:
  api:
    image: $DOCKER_USERNAME/rental-guru:latest
    restart: always
    container_name: django
    env_file:
      - .env
    environment:
      DB_HOST: postgres
      REDIS_HOST: redis
      REDIS_PORT: 6379
    volumes:
      - ./staticfiles:/app/staticfiles
      - ./media:/app/media
      - ./.env:/app/.env
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"
      - "8001:8001"

  postgres:
    image: postgres:13.0-alpine
    restart: on-failure
    container_name: postgres
    environment:
      POSTGRES_USER: $DB_USER
      POSTGRES_PASSWORD: $DB_PASSWORD
      POSTGRES_DB: $DB_NAME
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $DB_USER -d $DB_NAME"]
      interval: 5s
      timeout: 3s
      retries: 3
    volumes:
      - pg_data:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    container_name: redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3

  celery:
    image: $DOCKER_USERNAME/rental-guru-celery:latest
    container_name: celery
    restart: always
    env_file:
      - .env
    environment:
      DB_HOST: postgres
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      redis:
        condition: service_healthy
      api:
        condition: service_started

volumes:
  pg_data:
  logs:

