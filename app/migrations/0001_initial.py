# Generated by Django 5.0.6 on 2024-08-23 19:00

import app.models
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Lessor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('super_host', models.BooleanField(default=False, verbose_name='Суперхост')),
                ('count_trip', models.PositiveIntegerField(default=0, verbose_name='Колличество поездок')),
                ('average_response_time', models.DurationField(blank=True, null=True, verbose_name='Среднее время ответа')),
            ],
            options={
                'verbose_name': 'Арендодатель',
                'verbose_name_plural': 'Арендодатели',
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField(choices=[(1, '1 Star'), (2, '2 Stars'), (3, '3 Stars'), (4, '4 Stars'), (5, '5 Stars')])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Рейтинг',
                'verbose_name_plural': 'Рейтинги',
            },
        ),
        migrations.CreateModel(
            name='Renter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verification', models.BooleanField(default=False, verbose_name='Верифированный пользователь')),
                ('rating', models.JSONField(default=app.models.default_rating, verbose_name='Рейтинг')),
            ],
            options={
                'verbose_name': 'Арендатор',
                'verbose_name_plural': 'Арендаторы',
            },
        ),
        migrations.CreateModel(
            name='RenterDocuments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30, verbose_name='Вид документа')),
                ('number', models.PositiveIntegerField(verbose_name='Номер')),
                ('photo', models.ImageField(upload_to=app.models.upload_renter_document, verbose_name='Фото')),
            ],
            options={
                'verbose_name': 'Документ',
                'verbose_name_plural': 'Документы',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('member', 'Пользователь'), ('manager', 'Менеджер'), ('admin', 'Администратор')], default='member', max_length=10, verbose_name='Роль')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('telephone', models.CharField(blank=True, max_length=11, null=True, verbose_name='Телефон')),
                ('currency', models.CharField(blank=True, max_length=3, null=True, verbose_name='Валюта')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to=app.models.upload_avatar, verbose_name='Аватар')),
                ('about', models.TextField(blank=True, null=True, verbose_name='О себе')),
                ('email_notification', models.BooleanField(default=False, verbose_name='Email уведомления')),
                ('push_notification', models.BooleanField(default=False, verbose_name='Push уеведомления')),
                ('first_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='Фамилия')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
    ]
